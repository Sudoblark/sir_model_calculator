version: 2.1

orbs:
  codecov: codecov/codecov@3.2.2

jobs:
  run-unit-tests:
    docker:
      - image: circleci/python:3.8

    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install -r requirements.txt
      - run:
          name: Install PyTest
          command: pip install PyTest
      - run:
          name: Run PyTest
          command: |
            python -m pytest tests/ --junitxml=pytest.xml

      - store_test_results:
          path: pytest.xml

  generate-code-coverage:
    docker:
      - image: circleci/python:3.8

    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install -r requirements.txt
      - run:
          name: Install PyTest
          command: pip install PyTest
      - run:
          name: Install Coverage
          command: pip install coverage
      - run:
          name: Coverage run
          command: coverage run -m pytest tests/ || true
      - run:
          name: Coverage report
          command: coverage report

      - run:
          name: Coverage JSON
          command: coverage json

      - codecov/upload:


  pylint:
    docker:
      - image: circleci/python:3.8

    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install -r requirements.txt
      - run:
          name: Install PyLint
          command: pip install pylint
      - run:
          name: Install AnyBadge
          command: pip install anybadge
      - run:
          name: Install PyLint plugins
          command: pip install pylint_gitlab
      - run:
          name: Create PyLint folder
          command: mkdir pylint
      - run:
          name: Create PyLint tmp folder
          command: mkdir /tmp/pylint

      - run:
          name: Create PyLint HTML output
          command: pylint src --exit-zero --load-plugins=pylint_gitlab --output-format=gitlab-pages-html --output=pylint/html.index
      - run:
          name: Output PyLint summary
          command: pylint src --exit-zero --output-format=text | tee /tmp/pylint/pylint.txt
      - run:
          name: Find PyLint score
          command: sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' /tmp/pylint/pylint.txt > /tmp/pylint/pylint.score
      - run:
          name: Output PyLint badge
          command: anybadge --overwrite --label PyLint --value=$(cat /tmp/pylint/pylint.score) --file=pylint/badge.svg 4=red 6=orange 8=yellow 10=green
      - store_artifacts:
          path: pylint

workflows:
  run-tests-and-coverage:
    jobs:
      - run-unit-tests
      - generate-code-coverage
      - pylint

